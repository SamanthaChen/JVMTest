/**
 * 此代码演示了两点：
 * 1.对象可以在被GC时自我拯救
 * 2.这种自救机会只有一次，因为一个对象的finali方法最多会被系统自动调用一次
 * */
public class FinalizeEscapeGC {

	public static FinalizeEscapeGC SAVE_HOOK = null;
	public void isAlive(){
		System.out.println("yes, i am still alive :");
	}
	protected void finalize() throws Throwable{
		super.finalize();
		System.out.println("finaliz method executed！");
		FinalizeEscapeGC.SAVE_HOOK = this;
	}
	public static void main(String[] args) throws Throwable {
		SAVE_HOOK = new FinalizeEscapeGC();
		
		//对象第一次成功拯救自己
		SAVE_HOOK = null;
		System.gc();
		//因为finalize方法优先级很低，暂停0.5s等待
		Thread.sleep(500);
		if(SAVE_HOOK !=null){
			SAVE_HOOK.isAlive();
		}else{
			System.out.println("no,i am dead :( ");
		}

		
		//根上面代码相同，但是这次自救失败
		SAVE_HOOK = null;
		System.gc();
		//因为finalize方法优先级很低，暂停0.5s等待
		Thread.sleep(500);
		if(SAVE_HOOK !=null){
			SAVE_HOOK.isAlive();
		}else{
			System.out.println("no,i am dead :( ");
		}

	}

}
